{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 响应拦截器\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 认证相关 API\nexport const authAPI = {\n  login: async credentials => {\n    const response = await apiClient.post('/auth/login', credentials);\n    return response.data;\n  },\n  register: async userData => {\n    const response = await apiClient.post('/auth/register', userData);\n    return response.data;\n  },\n  logout: async () => {\n    const response = await apiClient.post('/auth/logout');\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await apiClient.get('/auth/me');\n    return response.data;\n  }\n};\n\n// 用户管理 API\nexport const userAPI = {\n  getUsers: async params => {\n    const response = await apiClient.get('/users', {\n      params\n    });\n    return response.data;\n  },\n  updateUserStatus: async (id, status) => {\n    const response = await apiClient.put(`/users/${id}/status`, {\n      status\n    });\n    return response.data;\n  }\n};\n\n// 商品管理 API\nexport const productAPI = {\n  getProducts: async params => {\n    const response = await apiClient.get('/products', {\n      params\n    });\n    return response.data;\n  },\n  createProduct: async data => {\n    const config = data instanceof FormData ? {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    } : {};\n    const response = await apiClient.post('/products', data, config);\n    return response.data;\n  },\n  updateProduct: async (id, data) => {\n    const config = data instanceof FormData ? {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    } : {};\n    const response = await apiClient.put(`/products/${id}`, data, config);\n    return response.data;\n  },\n  updateProductStatus: async (id, status) => {\n    const response = await apiClient.put(`/products/${id}/status`, {\n      status\n    });\n    return response.data;\n  },\n  deleteProduct: async id => {\n    const response = await apiClient.delete(`/products/${id}`);\n    return response.data;\n  }\n};\n\n// 订单管理 API\nexport const orderAPI = {\n  getOrders: async params => {\n    const response = await apiClient.get('/orders', {\n      params\n    });\n    return response.data;\n  },\n  updateOrderStatus: async (orderId, status) => {\n    const response = await apiClient.put(`/orders/${orderId}/status`, {\n      status\n    });\n    return response.data;\n  },\n  getOrderById: async orderId => {\n    const response = await apiClient.get(`/orders/${orderId}`);\n    return response.data;\n  }\n};\n\n// 统计数据 API\nexport const statsAPI = {\n  getDashboardStats: async () => {\n    const response = await apiClient.get('/stats/dashboard');\n    return response.data;\n  },\n  getMerchantStats: async () => {\n    const response = await apiClient.get('/stats/merchant');\n    return response.data;\n  }\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","credentials","post","data","register","userData","logout","getCurrentUser","get","userAPI","getUsers","params","updateUserStatus","id","put","productAPI","getProducts","createProduct","FormData","updateProduct","updateProductStatus","deleteProduct","delete","orderAPI","getOrders","updateOrderStatus","orderId","getOrderById","statsAPI","getDashboardStats","getMerchantStats"],"sources":["/Users/937bb/Documents/userProject/AutoPickup/admin-panel/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Product, ProductFormData, User, Order, RegisterRequest } from '../types';\n\ninterface ApiResponse<T = any> {\n  success: boolean;\n  message?: string;\n  data?: T;\n}\n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// 请求拦截器\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 响应拦截器\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// 认证相关 API\nexport const authAPI = {\n  login: async (credentials: { username: string; password: string }): Promise<ApiResponse> => {\n    const response = await apiClient.post('/auth/login', credentials);\n    return response.data;\n  },\n  \n  register: async (userData: RegisterRequest): Promise<ApiResponse> => {\n    const response = await apiClient.post('/auth/register', userData);\n    return response.data;\n  },\n  \n  logout: async (): Promise<ApiResponse> => {\n    const response = await apiClient.post('/auth/logout');\n    return response.data;\n  },\n  \n  getCurrentUser: async (): Promise<ApiResponse<User>> => {\n    const response = await apiClient.get('/auth/me');\n    return response.data;\n  },\n};\n\n// 用户管理 API\nexport const userAPI = {\n  getUsers: async (params?: { role?: string; status?: string; page?: number; limit?: number }): Promise<ApiResponse<{ users: User[]; total: number; page: number; totalPages: number }>> => {\n    const response = await apiClient.get('/users', { params });\n    return response.data;\n  },\n  \n  updateUserStatus: async (id: string, status: string): Promise<ApiResponse> => {\n    const response = await apiClient.put(`/users/${id}/status`, { status });\n    return response.data;\n  },\n};\n\n// 商品管理 API\nexport const productAPI = {\n  getProducts: async (params?: { merchant?: string; category?: string; status?: string; page?: number; limit?: number }): Promise<ApiResponse<{ products: Product[]; total: number; page: number; totalPages: number }>> => {\n    const response = await apiClient.get('/products', { params });\n    return response.data;\n  },\n  \n  createProduct: async (data: ProductFormData | FormData): Promise<ApiResponse<Product>> => {\n    const config = data instanceof FormData ? {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    } : {};\n    \n    const response = await apiClient.post('/products', data, config);\n    return response.data;\n  },\n  \n  updateProduct: async (id: string, data: Partial<ProductFormData> | FormData): Promise<ApiResponse<Product>> => {\n    const config = data instanceof FormData ? {\n      headers: { 'Content-Type': 'multipart/form-data' }\n    } : {};\n    \n    const response = await apiClient.put(`/products/${id}`, data, config);\n    return response.data;\n  },\n  \n  updateProductStatus: async (id: string, status: 'active' | 'inactive'): Promise<ApiResponse> => {\n    const response = await apiClient.put(`/products/${id}/status`, { status });\n    return response.data;\n  },\n  \n  deleteProduct: async (id: string): Promise<ApiResponse> => {\n    const response = await apiClient.delete(`/products/${id}`);\n    return response.data;\n  }\n};\n\n// 订单管理 API\nexport const orderAPI = {\n  getOrders: async (params?: { status?: string; page?: number; limit?: number }): Promise<ApiResponse<{ orders: Order[]; total: number; page: number; totalPages: number }>> => {\n    const response = await apiClient.get('/orders', { params });\n    return response.data;\n  },\n  \n  updateOrderStatus: async (orderId: string, status: string): Promise<ApiResponse> => {\n    const response = await apiClient.put(`/orders/${orderId}/status`, { status });\n    return response.data;\n  },\n  \n  getOrderById: async (orderId: string): Promise<ApiResponse<Order>> => {\n    const response = await apiClient.get(`/orders/${orderId}`);\n    return response.data;\n  }\n};\n\n// 统计数据 API\nexport const statsAPI = {\n  getDashboardStats: async (): Promise<ApiResponse> => {\n    const response = await apiClient.get('/stats/dashboard');\n    return response.data;\n  },\n  \n  getMerchantStats: async (): Promise<ApiResponse> => {\n    const response = await apiClient.get('/stats/merchant');\n    return response.data;\n  },\n};\n\nexport default apiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}